-- MySQL Script generated by MySQL Workbench
-- Mon Nov  3 22:18:30 2014
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `mydb` ;
DROP TABLE IF EXISTS user;
DROP TABLE IF EXISTS artist;
DROP TABLE IF EXISTS originalSong;
DROP TABLE IF EXISTS genre;
DROP TABLE IF EXISTS remix;
DROP TABLE IF EXISTS rank;
DROP TABLE IF EXISTS favorite;
DROP TABLE IF EXISTS payment;

-- -----------------------------------------------------
-- Table `mydb`.`user`
-- -----------------------------------------------------
CREATE TABLE `mydb`.`user` (
  `userId` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NULL,
  `password` VARCHAR(255) NULL,
  `email` VARCHAR(45) NULL,
  `role` VARCHAR(45) NULL,
  `saldo` VARCHAR(45) NULL,
  PRIMARY KEY (`userId`))
ENGINE = InnoDB;

INSERT INTO user (userId, username, password, email, role, saldo) VALUES 
(1, 'DjZuse', 'pass123', 'DjZuse@gmail.com', 'uploader', '€200,-'),
(2, 'Viper', 'Cobra_j2', 'Viper_Cobra@gmail.com', 'uploader', '€50,-'),
(3, 'Thejacco', 'noob_456', 'Jaccodewitt@gmail.com', 'viewer', '€0,-'),
(4, 'Brammetje', 'HUisleuk', 'Bram_molenaar@gmail.com', 'uploader', '€5000,-'),
(5, 'KlaasP', 'MixBase!', 'KlaasP@gmail.com', 'uploader', '€40,-'),
(6, 'EliasK', 'pass456', 'EliasK@gmail.com', 'viewer', '€0,-'),
(7, 'Hunt4Fury', 'trololo890', 'Hunt4@gmail.com', 'viewer', '€0,-')
;
-- -----------------------------------------------------
-- Table `mydb`.`artist`
-- -----------------------------------------------------
CREATE TABLE `mydb`.`artist` (
  `artistId` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `sirname` VARCHAR(45) NULL,
  `bio` TEXT NULL,
  PRIMARY KEY (`artistId`))
ENGINE = InnoDB;

INSERT INTO artist (artistId, name, sirname, bio) VALUES
(1, 'Martin Garrix', 'Martijn Garritsen','' ),
(2, 'HardWell', 'Robbert van de Corput' ,'' ),
(3, 'Armin van Buuren', 'Armin Jozef Daniël van Buuren','' ),
(4, 'Dj Tiësto', 'Tijs Michiel Verwest','' ),
(5, 'David Guetta', 'Guetta','' ),
(6, 'Showtek', 'Sjoerd & Wouter Janssen','' )
;

-- -----------------------------------------------------
-- Table `mydb`.`originalSong`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`originalSong` (
  `originalSongId` INT NOT NULL AUTO_INCREMENT,
  `genre_genreId` INT NOT NULL,
  `artist` VARCHAR(45) NULL,
  `songName` VARCHAR(45) NULL,
  `label` VARCHAR(45) NULL,
  `artist_artistId` INT NOT NULL,
  PRIMARY KEY (`originalSongId`, `artist_artistId`),
  INDEX `fk_originalSong_artist1_idx` (`artist_artistId` ASC),
  CONSTRAINT `fk_originalSong_artist1`
    FOREIGN KEY (`artist_artistId`)
    REFERENCES `mydb`.`artist` (`artistId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

INSERT INTO originalSong ( originalSongId, genre_genreId, artist, songName, label, artist_artistId) VALUES
(1, 1, 'Martin Garrix', 'Animals', 'Spinning Records', 1),
(2, 1, 'Dj Tiësto', 'Wasted', 'Musical Freedom', 4),
(3, 1, 'Hardwell', 'Young Again', 'Revealed', 2),
(4, 1, 'Showtek', 'Cannonball', 'Spinning Records', 6),
(5, 1, 'Martin Garrix', 'Virus', 'Spinning Records', 1),
(6, 1, 'Hardwell', 'Arcadia', 'Revealed', 2)
;

-- -----------------------------------------------------
-- Table `mydb`.`genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`genre` (
  `genreId` INT NOT NULL,
  `genre` VARCHAR(45) NULL,
  PRIMARY KEY (`genreId`))
ENGINE = InnoDB;

INSERT INTO genre ( genreId, genre) VALUES
( 1, 'House'),
( 2, 'Deep House'),
( 3, 'HardStyle'),
( 4, 'Techno'),
( 5, 'Trance')
;


-- -----------------------------------------------------
-- Table `mydb`.`remix`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`remix` (
  `remixId` INT NOT NULL,
  `djName` VARCHAR(45) NULL,
  `originalSong_originalSongId` INT NOT NULL,
  `user_userId` INT NOT NULL,
  `genre_genreId` INT NOT NULL,
  `datetime` DATETIME NULL,
  PRIMARY KEY (`remixId`, `originalSong_originalSongId`, `user_userId`, `genre_genreId`),
  INDEX `fk_remix_originalSong1_idx` (`originalSong_originalSongId` ASC),
  INDEX `fk_remix_user1_idx` (`user_userId` ASC),
  INDEX `fk_remix_genre1_idx` (`genre_genreId` ASC),
  CONSTRAINT `fk_remix_originalSong1`
    FOREIGN KEY (`originalSong_originalSongId`)
    REFERENCES `mydb`.`originalSong` (`originalSongId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_remix_user1`
    FOREIGN KEY (`user_userId`)
    REFERENCES `mydb`.`user` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_remix_genre1`
    FOREIGN KEY (`genre_genreId`)
    REFERENCES `mydb`.`genre` (`genreId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


INSERT INTO remix(remixId, djName, originalSong_originalSongId, user_userId,  genre_genreId, datetime) VALUES
(1, 'Dj Zuse', 5, 1, 1, '2014-04-20 18:34:23'),
(2, 'Viper', 3, 2, 1, '2014-9-3 15:26:10'),
(3, 'KlaasP', 5, 5, 1, '2014-5-20 22:47:40'),
(4, 'Brammetje', 1, 4, 1, '2014-1-7 1:41:23'),
(5, 'Brammetje', 3, 4, 1, '2014-1-17 11:23:50')
;

-- -----------------------------------------------------
-- Table `mydb`.`rank`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`rank` (
  `rankId` INT NOT NULL,
  `platform` VARCHAR(45) NULL,
  `url` VARCHAR(223) NULL,
  `plays` VARCHAR(45) NULL,
  `datetime` DATETIME NULL,
  `remix_remixId` INT NOT NULL,
  PRIMARY KEY (`rankId`, `remix_remixId`),
  INDEX `fk_rank_remix1_idx` (`remix_remixId` ASC),
  CONSTRAINT `fk_rank_remix1`
    FOREIGN KEY (`remix_remixId`)
    REFERENCES `mydb`.`remix` (`remixId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

INSERT INTO rank(rankId, platform, url, plays, datetime, remix_remixId) VALUES
(1, 'youtube', 'https://www.youtube.com/watch?v=Z6XYcKk-l22', '10.432 Views', '2014-6-25', 3),
(2, 'youtube', 'https://www.youtube.com/watch?v=-5m4P4ZlAQs', '7.342 Views', '2014-2-10', 5),
(3, 'facebook','https://www.facebook.com/djZuse/VirusZuseEdit','5.432 Views', '2014-5-17', 1),
(4, 'twitter', 'https://www.twitter.com/Viper/HardwellVirusMix', '3.123 Views', '2014-11-23', 2),
(5, 'facebook', 'https://www.facebook.com/Brammetje/AnimalsBrammified', '1.563 Views', '2014-2-31', 4)
; 

;

-- -----------------------------------------------------
-- Table `mydb`.`genre_has_artist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`genre_has_artist` (
  `genre_genreId` INT NOT NULL,
  `artist_artistId` INT NOT NULL,
  PRIMARY KEY (`genre_genreId`, `artist_artistId`),
  INDEX `fk_genre_has_artist_artist1_idx` (`artist_artistId` ASC),
  INDEX `fk_genre_has_artist_genre_idx` (`genre_genreId` ASC),
  CONSTRAINT `fk_genre_has_artist_genre`
    FOREIGN KEY (`genre_genreId`)
    REFERENCES `mydb`.`genre` (`genreId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_genre_has_artist_artist1`
    FOREIGN KEY (`artist_artistId`)
    REFERENCES `mydb`.`artist` (`artistId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `mydb`.`artist_has_genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`artist_has_genre` (
  `artist_artistId` INT NOT NULL,
  `genre_genreId` INT NOT NULL,
  PRIMARY KEY (`artist_artistId`, `genre_genreId`),
  INDEX `fk_artist_has_genre_genre1_idx` (`genre_genreId` ASC),
  INDEX `fk_artist_has_genre_artist1_idx` (`artist_artistId` ASC),
  CONSTRAINT `fk_artist_has_genre_artist1`
    FOREIGN KEY (`artist_artistId`)
    REFERENCES `mydb`.`artist` (`artistId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_artist_has_genre_genre1`
    FOREIGN KEY (`genre_genreId`)
    REFERENCES `mydb`.`genre` (`genreId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`favorite`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`favorite` (
  `favoriteId` INT NOT NULL AUTO_INCREMENT,
  `user_userId` INT NOT NULL,
  `remix_remixId` INT NOT NULL,
  PRIMARY KEY (`favoriteId`),
  INDEX `fk_favorite_user1_idx` (`user_userId` ASC),
  INDEX `fk_favorite_remix1_idx` (`remix_remixId` ASC),
  CONSTRAINT `fk_favorite_user1`
    FOREIGN KEY (`user_userId`)
    REFERENCES `mydb`.`user` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favorite_remix1`
    FOREIGN KEY (`remix_remixId`)
    REFERENCES `mydb`.`remix` (`remixId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

INSERT INTO favorite(favoriteId, user_userId, remix_remixId) VALUES
(1, 5 , 3),
(2, 4,  4),
(3, 1, 1),
(4, 2, 2),
(5, 4, 5)
;



-- -----------------------------------------------------
-- Table `mydb`.`payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`payment` (
  `paymentId` INT NOT NULL AUTO_INCREMENT,
  `amount` VARCHAR(45) NULL,
  `datetime` DATETIME NULL,
  `payd` TINYINT(1) NULL,
  `user_userId` INT NOT NULL,
  PRIMARY KEY (`paymentId`),
  INDEX `fk_payment_user1_idx` (`user_userId` ASC),
  CONSTRAINT `fk_payment_user1`
    FOREIGN KEY (`user_userId`)
    REFERENCES `mydb`.`user` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

INSERT INTO payment(paymentId, amount, datetime, payd, user_userId) VALUES
(1, '€40,-' , '2014-1-1' , 0, 1),
(2, '€100,-', '2014-5-25', 1, 2),
(3, '€5,-', '2014-2-13', 1, 3),
(4, '€0,70', '2014-9-2', 0, 4),
(5, '€450,-', '2013-12-31', 1, 5)
;


-- -----------------------------------------------------
-- Table `mydb`.`payment_has_remix`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`payment_has_remix` (
  `payment_paymentId` INT NOT NULL,
  `remix_remixId` INT NOT NULL,
  PRIMARY KEY (`payment_paymentId`, `remix_remixId`),
  INDEX `fk_payment_has_remix_remix1_idx` (`remix_remixId` ASC),
  INDEX `fk_payment_has_remix_payment1_idx` (`payment_paymentId` ASC),
  CONSTRAINT `fk_payment_has_remix_payment1`
    FOREIGN KEY (`payment_paymentId`)
    REFERENCES `mydb`.`payment` (`paymentId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_payment_has_remix_remix1`
    FOREIGN KEY (`remix_remixId`)
    REFERENCES `mydb`.`remix` (`remixId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
