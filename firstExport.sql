-- MySQL Script generated by MySQL Workbench
-- Mon Nov  3 14:06:28 2014
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user` (
  `userId` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NULL,
  `password` VARCHAR(255) NULL,
  `email` VARCHAR(45) NULL,
  `role` INT NULL,
  `saldo` VARCHAR(45) NULL,
  PRIMARY KEY (`userId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`artist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`artist` (
  `artistId` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `sirname` VARCHAR(45) NULL,
  `bio` TEXT NULL,
  PRIMARY KEY (`artistId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`originalSong`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`originalSong` (
  `originalSongId` INT NOT NULL AUTO_INCREMENT,
  `genre` INT NOT NULL,
  `artist` VARCHAR(45) NULL,
  `songName` VARCHAR(45) NULL,
  `label` VARCHAR(45) NULL,
  `artist_artistId` INT NOT NULL,
  PRIMARY KEY (`originalSongId`, `artist_artistId`),
  INDEX `fk_originalSong_artist1_idx` (`artist_artistId` ASC),
  CONSTRAINT `fk_originalSong_artist1`
    FOREIGN KEY (`artist_artistId`)
    REFERENCES `mydb`.`artist` (`artistId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`genre` (
  `genreId` INT NOT NULL,
  `genre` VARCHAR(45) NULL,
  PRIMARY KEY (`genreId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`remix`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`remix` (
  `remixId` INT NOT NULL,
  `djName` VARCHAR(45) NULL,
  `originalSong_originalSongId` INT NOT NULL,
  `user_userId` INT NOT NULL,
  `genre_genreId` INT NOT NULL,
  PRIMARY KEY (`remixId`, `originalSong_originalSongId`, `user_userId`, `genre_genreId`),
  INDEX `fk_remix_originalSong1_idx` (`originalSong_originalSongId` ASC),
  INDEX `fk_remix_user1_idx` (`user_userId` ASC),
  INDEX `fk_remix_genre1_idx` (`genre_genreId` ASC),
  CONSTRAINT `fk_remix_originalSong1`
    FOREIGN KEY (`originalSong_originalSongId`)
    REFERENCES `mydb`.`originalSong` (`originalSongId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_remix_user1`
    FOREIGN KEY (`user_userId`)
    REFERENCES `mydb`.`user` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_remix_genre1`
    FOREIGN KEY (`genre_genreId`)
    REFERENCES `mydb`.`genre` (`genreId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`rank`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`rank` (
  `rankId` INT NOT NULL,
  `platform` VARCHAR(45) NULL,
  `url` VARCHAR(45) NULL,
  `plays` VARCHAR(45) NULL,
  `remix_remixId` INT NOT NULL,
  PRIMARY KEY (`rankId`, `remix_remixId`),
  INDEX `fk_rank_remix1_idx` (`remix_remixId` ASC),
  CONSTRAINT `fk_rank_remix1`
    FOREIGN KEY (`remix_remixId`)
    REFERENCES `mydb`.`remix` (`remixId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`genre_has_artist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`genre_has_artist` (
  `genre_genreId` INT NOT NULL,
  `artist_artistId` INT NOT NULL,
  PRIMARY KEY (`genre_genreId`, `artist_artistId`),
  INDEX `fk_genre_has_artist_artist1_idx` (`artist_artistId` ASC),
  INDEX `fk_genre_has_artist_genre_idx` (`genre_genreId` ASC),
  CONSTRAINT `fk_genre_has_artist_genre`
    FOREIGN KEY (`genre_genreId`)
    REFERENCES `mydb`.`genre` (`genreId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_genre_has_artist_artist1`
    FOREIGN KEY (`artist_artistId`)
    REFERENCES `mydb`.`artist` (`artistId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`artist_has_genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`artist_has_genre` (
  `artist_artistId` INT NOT NULL,
  `genre_genreId` INT NOT NULL,
  PRIMARY KEY (`artist_artistId`, `genre_genreId`),
  INDEX `fk_artist_has_genre_genre1_idx` (`genre_genreId` ASC),
  INDEX `fk_artist_has_genre_artist1_idx` (`artist_artistId` ASC),
  CONSTRAINT `fk_artist_has_genre_artist1`
    FOREIGN KEY (`artist_artistId`)
    REFERENCES `mydb`.`artist` (`artistId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_artist_has_genre_genre1`
    FOREIGN KEY (`genre_genreId`)
    REFERENCES `mydb`.`genre` (`genreId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`favorite`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`favorite` (
  `favoriteId` INT NOT NULL AUTO_INCREMENT,
  `user_userId` INT NOT NULL,
  `remix_remixId` INT NOT NULL,
  PRIMARY KEY (`favoriteId`),
  INDEX `fk_favorite_user1_idx` (`user_userId` ASC),
  INDEX `fk_favorite_remix1_idx` (`remix_remixId` ASC),
  CONSTRAINT `fk_favorite_user1`
    FOREIGN KEY (`user_userId`)
    REFERENCES `mydb`.`user` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favorite_remix1`
    FOREIGN KEY (`remix_remixId`)
    REFERENCES `mydb`.`remix` (`remixId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`payment` (
  `paymentId` INT NOT NULL AUTO_INCREMENT,
  `amount` VARCHAR(45) NULL,
  `payd` TINYINT(1) NULL,
  `user_userId` INT NOT NULL,
  PRIMARY KEY (`paymentId`),
  INDEX `fk_payment_user1_idx` (`user_userId` ASC),
  CONSTRAINT `fk_payment_user1`
    FOREIGN KEY (`user_userId`)
    REFERENCES `mydb`.`user` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`payment_has_remix`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`payment_has_remix` (
  `payment_paymentId` INT NOT NULL,
  `remix_remixId` INT NOT NULL,
  PRIMARY KEY (`payment_paymentId`, `remix_remixId`),
  INDEX `fk_payment_has_remix_remix1_idx` (`remix_remixId` ASC),
  INDEX `fk_payment_has_remix_payment1_idx` (`payment_paymentId` ASC),
  CONSTRAINT `fk_payment_has_remix_payment1`
    FOREIGN KEY (`payment_paymentId`)
    REFERENCES `mydb`.`payment` (`paymentId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_payment_has_remix_remix1`
    FOREIGN KEY (`remix_remixId`)
    REFERENCES `mydb`.`remix` (`remixId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
